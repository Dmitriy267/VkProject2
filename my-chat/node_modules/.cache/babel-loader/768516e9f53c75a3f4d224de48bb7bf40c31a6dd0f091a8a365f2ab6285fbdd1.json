{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  frends: [{\n    id: 0,\n    name: '',\n    img: '',\n    alt: ''\n  }],\n  loading: null,\n  hasError: null\n};\nexport const FrendsSlice = createSlice({\n  name: 'frends',\n  initialState,\n  reducers: {\n    getFrends: (state, action) => {\n      state.frends.push({\n        id: action.payload.id,\n        name: action.payload.name,\n        img: action.payload.img,\n        alt: action.payload.alt\n      });\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(FetchFrendsAll.pending, state => {\n      state.loading = 'Загрузка';\n      state.hasError = null;\n    }), builder.addCase(FetchFrendsAll.fulfilled, (state, action) => {\n      state.loading = 'Данные получены';\n      state.frends = action.payload;\n    }), builder.addCase(FetchFrendsAll.rejected, (state, action) => {\n      state.loading = 'Запрос отклонен';\n      state.hasError = action.payload;\n    });\n  }\n});\nexport const FetchFrendsAll = createAsyncThunk('frends/FetchFrends', async function (_, _ref) {\n  let {\n    rejectWithValue\n  } = _ref;\n  try {\n    const response = await fetch('/frends');\n    if (!response.ok) {\n      throw new Error('Ошибка на сервере');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const {\n  getFrends\n} = FrendsSlice.actions;\nexport const frendsSelector = state => state.frends;\nexport default FrendsSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","initialState","frends","id","name","img","alt","loading","hasError","FrendsSlice","reducers","getFrends","state","action","push","payload","extraReducers","builder","addCase","FetchFrendsAll","pending","fulfilled","rejected","_","_ref","rejectWithValue","response","fetch","ok","Error","data","json","error","message","actions","frendsSelector","reducer"],"sources":["C:/Users/DmitriyV/project/VKProject/my-chat/src/redux/features/FrendsList/FrendsSlice.tsx"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction} from '@reduxjs/toolkit';\r\nimport { AppDispatch } from '../../store';\r\nimport axios from 'axios';\r\ninterface FrendsState {\r\n    frends:[{\r\nid:number;\r\nname:string;\r\nimg:string;\r\nalt:string;\r\n    }],\r\n    loading:null|string;\r\n    hasError:null|string;\r\n}\r\nconst initialState: FrendsState={\r\n    frends:[{\r\n        id:0,\r\n        name:'',\r\n        img:'',\r\n        alt:''\r\n    }],\r\n    loading:null,\r\n    hasError:null\r\n}\r\nexport const FrendsSlice=createSlice({\r\n    name:'frends',\r\n    initialState,\r\n    reducers:{\r\n        getFrends:(state, action:PayloadAction<{id:number, name:string, img:string, alt:string}>)=>{\r\n            state.frends.push({\r\n                id: action.payload.id,\r\n                name: action.payload.name,\r\n                img: action.payload.img,\r\n                alt: action.payload.alt\r\n            })\r\n        }\r\n      \r\n    },\r\n    extraReducers: (builder)=>{\r\n        builder.addCase(FetchFrendsAll.pending, (state)=>{\r\n            state.loading='Загрузка';\r\n            state.hasError=null;\r\n\r\n        }),\r\n        builder.addCase(FetchFrendsAll.fulfilled, (state, action)=>{\r\n            state.loading='Данные получены';\r\n            state.frends=action.payload;\r\n\r\n        }),\r\n        builder.addCase(FetchFrendsAll.rejected, (state, action)=>{\r\n            state.loading='Запрос отклонен';\r\n            state.hasError=action.payload;\r\n\r\n        })\r\n\r\n    }\r\n})\r\n\r\nexport const FetchFrendsAll=createAsyncThunk(\r\n    'frends/FetchFrends',\r\n    async function (_, {rejectWithValue}) {\r\n    try{\r\n        const response =await fetch ('/frends');\r\n        if(!response.ok){\r\n            throw new Error ('Ошибка на сервере')\r\n        }\r\n        const data=await response.json();\r\n        return data;\r\n    }catch(error){\r\n        return rejectWithValue(error.message);\r\n\r\n    }\r\n    }\r\n\r\n) \r\n\r\nexport const {getFrends}=FrendsSlice.actions;\r\nexport const frendsSelector=(state:FrendsState)=>state.frends;\r\nexport default FrendsSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAsB,kBAAkB;AAa9E,MAAMC,YAAyB,GAAC;EAC5BC,MAAM,EAAC,CAAC;IACJC,EAAE,EAAC,CAAC;IACJC,IAAI,EAAC,EAAE;IACPC,GAAG,EAAC,EAAE;IACNC,GAAG,EAAC;EACR,CAAC,CAAC;EACFC,OAAO,EAAC,IAAI;EACZC,QAAQ,EAAC;AACb,CAAC;AACD,OAAO,MAAMC,WAAW,GAACT,WAAW,CAAC;EACjCI,IAAI,EAAC,QAAQ;EACbH,YAAY;EACZS,QAAQ,EAAC;IACLC,SAAS,EAACA,CAACC,KAAK,EAAEC,MAAsE,KAAG;MACvFD,KAAK,CAACV,MAAM,CAACY,IAAI,CAAC;QACdX,EAAE,EAAEU,MAAM,CAACE,OAAO,CAACZ,EAAE;QACrBC,IAAI,EAAES,MAAM,CAACE,OAAO,CAACX,IAAI;QACzBC,GAAG,EAAEQ,MAAM,CAACE,OAAO,CAACV,GAAG;QACvBC,GAAG,EAAEO,MAAM,CAACE,OAAO,CAACT;MACxB,CAAC,CAAC;IACN;EAEJ,CAAC;EACDU,aAAa,EAAGC,OAAO,IAAG;IACtBA,OAAO,CAACC,OAAO,CAACC,cAAc,CAACC,OAAO,EAAGR,KAAK,IAAG;MAC7CA,KAAK,CAACL,OAAO,GAAC,UAAU;MACxBK,KAAK,CAACJ,QAAQ,GAAC,IAAI;IAEvB,CAAC,CAAC,EACFS,OAAO,CAACC,OAAO,CAACC,cAAc,CAACE,SAAS,EAAE,CAACT,KAAK,EAAEC,MAAM,KAAG;MACvDD,KAAK,CAACL,OAAO,GAAC,iBAAiB;MAC/BK,KAAK,CAACV,MAAM,GAACW,MAAM,CAACE,OAAO;IAE/B,CAAC,CAAC,EACFE,OAAO,CAACC,OAAO,CAACC,cAAc,CAACG,QAAQ,EAAE,CAACV,KAAK,EAAEC,MAAM,KAAG;MACtDD,KAAK,CAACL,OAAO,GAAC,iBAAiB;MAC/BK,KAAK,CAACJ,QAAQ,GAACK,MAAM,CAACE,OAAO;IAEjC,CAAC,CAAC;EAEN;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMI,cAAc,GAACpB,gBAAgB,CACxC,oBAAoB,EACpB,gBAAgBwB,CAAC,EAAAC,IAAA,EAAqB;EAAA,IAAnB;IAACC;EAAe,CAAC,GAAAD,IAAA;EACpC,IAAG;IACC,MAAME,QAAQ,GAAE,MAAMC,KAAK,CAAE,SAAS,CAAC;IACvC,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;MACZ,MAAM,IAAIC,KAAK,CAAE,mBAAmB,CAAC;IACzC;IACA,MAAMC,IAAI,GAAC,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAChC,OAAOD,IAAI;EACf,CAAC,QAAME,KAAK,EAAC;IACT,OAAOP,eAAe,CAACO,KAAK,CAACC,OAAO,CAAC;EAEzC;AACA,CAEJ,CAAC;AAED,OAAO,MAAM;EAACtB;AAAS,CAAC,GAACF,WAAW,CAACyB,OAAO;AAC5C,OAAO,MAAMC,cAAc,GAAEvB,KAAiB,IAAGA,KAAK,CAACV,MAAM;AAC7D,eAAeO,WAAW,CAAC2B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}