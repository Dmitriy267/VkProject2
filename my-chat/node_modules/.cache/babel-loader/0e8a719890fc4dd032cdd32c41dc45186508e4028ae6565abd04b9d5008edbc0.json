{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  imagePost: []\n};\nexport const ImagePostSlice = createSlice({\n  name: 'ImagePost',\n  initialState,\n  reducers: {\n    addImagePost: (state, action) => {\n      const myImage = state.imagePost.find(item => item.id === action.payload.id);\n      if (!myImage) {\n        state.imagePost.push({\n          id: action.payload.id,\n          img: action.payload.img,\n          altDescript: action.payload.altDescript\n        });\n      }\n    }\n  }\n});\nexport const {\n  addImagePost\n} = ImagePostSlice.actions;\nexport const ImagePostSelector = state => state.imagePost;\n_c = ImagePostSelector;\nexport default ImagePostSlice.reducer;\nvar _c;\n$RefreshReg$(_c, \"ImagePostSelector\");","map":{"version":3,"names":["createSlice","initialState","imagePost","ImagePostSlice","name","reducers","addImagePost","state","action","myImage","find","item","id","payload","push","img","altDescript","actions","ImagePostSelector","_c","reducer","$RefreshReg$"],"sources":["C:/Users/DmitriyV/project/VKProject/my-chat/src/redux/features/ImagePost/ImagePostSlice.tsx"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ninterface ImageAllMyPost {\r\n    id:number;\r\n    img:string;\r\n    altDescript:string;\r\n}\r\nexport interface ImagePostState{\r\n    imagePost:ImageAllMyPost[];\r\n}\r\n\r\nconst initialState: ImagePostState={\r\n    imagePost:[]\r\n}\r\nexport const ImagePostSlice=createSlice({\r\n    name:'ImagePost',\r\n    initialState,\r\n    reducers:{\r\n        addImagePost:(state, action:PayloadAction<{id:number, img:string, altDescript:string}>)=>{\r\n          const myImage=state.imagePost.find((item)=>item.id===action.payload.id)\r\n          if(!myImage){\r\n            state.imagePost.push({\r\n                id:action.payload.id,\r\n                img:action.payload.img,\r\n                altDescript:action.payload.altDescript,\r\n            })\r\n          }\r\n        },\r\n    }\r\n})\r\n\r\nexport const {addImagePost}=ImagePostSlice.actions;\r\nexport const ImagePostSelector=(state:ImagePostState)=>state.imagePost;\r\nexport default ImagePostSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAW7D,MAAMC,YAA4B,GAAC;EAC/BC,SAAS,EAAC;AACd,CAAC;AACD,OAAO,MAAMC,cAAc,GAACH,WAAW,CAAC;EACpCI,IAAI,EAAC,WAAW;EAChBH,YAAY;EACZI,QAAQ,EAAC;IACLC,YAAY,EAACA,CAACC,KAAK,EAAEC,MAAiE,KAAG;MACvF,MAAMC,OAAO,GAACF,KAAK,CAACL,SAAS,CAACQ,IAAI,CAAEC,IAAI,IAAGA,IAAI,CAACC,EAAE,KAAGJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MACvE,IAAG,CAACH,OAAO,EAAC;QACVF,KAAK,CAACL,SAAS,CAACY,IAAI,CAAC;UACjBF,EAAE,EAACJ,MAAM,CAACK,OAAO,CAACD,EAAE;UACpBG,GAAG,EAACP,MAAM,CAACK,OAAO,CAACE,GAAG;UACtBC,WAAW,EAACR,MAAM,CAACK,OAAO,CAACG;QAC/B,CAAC,CAAC;MACJ;IACF;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACV;AAAY,CAAC,GAACH,cAAc,CAACc,OAAO;AAClD,OAAO,MAAMC,iBAAiB,GAAEX,KAAoB,IAAGA,KAAK,CAACL,SAAS;AAACiB,EAAA,GAA1DD,iBAAiB;AAC9B,eAAef,cAAc,CAACiB,OAAO;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}